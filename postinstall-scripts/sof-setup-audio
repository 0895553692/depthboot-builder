#!/usr/bin/env python3

import argparse
from pathlib import Path
from os import remove as rm
from os import system as bash
import os
from shutil import copytree as cpdir
import sys
import shutil


def process_args():
    print("\033[95m" + "Processing args" + "\033[0m")
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--version', default="v2.2.x", help="Sof version to install, default: v2.2.x")
    parser.add_argument("--no-pulseaudio", "--no-pa", action="store_true", dest="no_pa", default=False,
                        help="Only install alsa")
    parser.add_argument('-p', '--local-path', dest="local_path",
                        help="Local path for config files to use instead of downloading from github.")
    return parser.parse_args()


def download_files() -> None:
    print("\033[94m" + "Downloading files from github" + "\033[0m")
    print("Removing old files")
    shutil.rmtree("/tmp/eupnea-audio", ignore_errors=True)
    shutil.rmtree("/tmp/sof-audio", ignore_errors=True)
    print("Downloading config files from github")
    os.system("git clone --depth 1 https://github.com/eupnea-linux/eupnea /tmp/eupnea-audio")
    print("Downloading sof audio from github")
    os.system("git clone --depth 1 https://github.com/thesofproject/sof-bin /tmp/sof-audio")


def install_pa(path: str, sof_version: str) -> None:
    print("\033[95m" + "Removing old files" + "\033[0m")
    if sof_version is None:
        sof_version = "v2.2.x"
    try:
        rm("/etc/systemd/system/alsa-reload.service")
    except FileNotFoundError:
        pass
    try:
        rm("/etc/pulse/default.pa")
    except FileNotFoundError:
        pass
    try:
        rm("/etc/modprobe.d/alsa-breath.conf")
    except FileNotFoundError:
        pass
    try:
        rm("/etc/asound.conf")
    except FileNotFoundError:
        pass
    if path == "":
        # remove all old sof folders + files
        bash("rm -rf /lib/firmware/intel/sof*")
        print("\033[95m" + "Installing sof-audio" + "\033[0m")
        cpdir("/tmp/sof-audio/" + sof_version + "/sof", "/lib/firmware/intel/sof")
        cpdir("/tmp/sof-audio/" + sof_version + "/sof-tplg", "/lib/firmware/intel/sof-tplg")
        # remove old sof scripts
        for file in Path("/usr/local/bin/").glob("sof*"):
            if not str(file).find("sof-setup-audio") == -1:
                continue
            else:
                os.remove(file)
        for file in os.listdir("/tmp/sof-audio/" + sof_version + "/tools-" + sof_version[:sof_version.rfind(".")]):
            shutil.move(
                os.path.join("/tmp/sof-audio/" + sof_version + "/tools-" + sof_version[:sof_version.rfind(".")], file),
                "/usr/local/bin/")
        # set path to temp if no path is given
        path = "/tmp/eupnea-audio/configs/audio/"
    print("Installing audio services")
    shutil.copy(f"{path}alsa-reload.service", "/etc/systemd/system/")
    os.system("systemctl enable alsa-reload")
    print("Copying pa config")
    shutil.copy(f"{path}default.pa", "/etc/pulse/")
    print("Blacklising old drivers")
    shutil.copy(f"{path}alsa-breath.conf", "/etc/modprobe.d/")
    print("Copying asound.conf")
    shutil.copy(f"{path}asound.conf", "/etc/")


if __name__ == "__main__":
    # Elevate script to root
    if os.geteuid() != 0:
        args = ['sudo', sys.executable] + sys.argv + [os.environ]
        os.execlpe('sudo', *args)
    args = process_args()
    if not args.local_files:
        download_files()
    if not args.no_pa:
        install_pa(args.local_files, args.version)
    else:
        print("\033[93m" + "Error: no-pulseaudio not yet implemented" + "\033[0m")
        # TODO: Implement alsa only install
    print("\033[92m" + "Audio installed successfully. Please reboot." + "\033[0m")
